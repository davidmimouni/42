#05_init_list

// Sample1.class.hpp

#ifndef SAMPLE_CLASS_H
# define SAMPLE_CLASS_H

class Sample1 {

public:

  char  a1;
  int   a2;
  float a3;

  Sample1( char p1, int p2, float p3 );
  ~Sample1( void );

};

#endif


// Sample2.class.hpp

#ifndef SAMPLE_CLASS_H
# define SAMPLE_CLASS_H

class Sample2 {

public:

  char  a1;
  int   a2;
  float a3;

  Sample2( char p1, int p2, float p3 );
  ~Sample2( void );

};

#endif

// Sample1.class.cpp

#include <iostream>
#include "Sample.class.hpp"

Sample1::Sample1( char p1, int p2, float p3 ) {
  std::cout << "Constructor called" << std::endl;

  this->a1 = p1;
  std::cout << "this->a1:  " << this->a1 << std::endl;

  this->a2 = p2;
  std::cout << "this->a2:  " << this->a2 << std::endl;

  this->a3 = p3;
  std::cout << "this->a3:  " << this->a3 << std::endl;

  return;
}

Sample1::~Sample1( void ) {

  std::cout << "Destructor called" << std::endl;
  return;
}

// Sample2.class.cpp

#include <iostream>
#include "Sample.class.hpp"

Sample2::Sample2( char p1, int p2, float p3 ) : a1(p1), a2(p2), a3(p3) {

  std::cout << "Constructor called" << std::endl;
  std::cout << "this->a1:  " << this->a1 << std::endl;
  std::cout << "this->a2:  " << this->a2 << std::endl;
  std::cout << "this->a3:  " << this->a3 << std::endl;
  return;
}

Sample2::~Sample2( void ) {

  std::cout << "Destructor called" << std::endl;
  return;
}
